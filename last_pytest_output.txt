...FFF.........................................................F........ [ 71%]
.............................                                            [100%]
=================================== FAILURES ===================================
________________________ test_dag_event_sentinel_weight ________________________

    def test_dag_event_sentinel_weight():
        class DummyHub:
            def __init__(self):
                self.weights = []
    
            async def send_sentinel_weight(self, sid: str, weight: float) -> None:
                self.weights.append((sid, weight))
    
        hub = DummyHub()
        app = create_app(ws_hub=hub)
        client = TestClient(app)
        metrics.reset_metrics()
        event = format_event(
            "qmtl.dagmanager",
            "sentinel_weight",
            {"sentinel_id": "v1", "weight": 0.7},
        )
        resp = client.post("/callbacks/dag-event", json=event)
        assert resp.status_code == 202
>       assert hub.weights == [("v1", 0.7)]
E       AssertionError: assert [('v1', 0.7), ('v1', 0.7)] == [('v1', 0.7)]
E         
E         Left contains one more item: ('v1', 0.7)
E         Use -v to get more diff

tests/gateway/test_callbacks.py:38: AssertionError
____________________ test_dag_event_sentinel_weight_metric _____________________

    def test_dag_event_sentinel_weight_metric():
        class DummyHub:
            def __init__(self):
                self.weights = []
    
            async def send_sentinel_weight(self, sid: str, weight: float) -> None:
                self.weights.append((sid, weight))
    
        metrics.reset_metrics()
        hub = DummyHub()
        app = create_app(ws_hub=hub)
        client = TestClient(app)
        event = format_event(
            "qmtl.dagmanager",
            "sentinel_weight",
            {"sentinel_id": "v2", "weight": 0.5},
        )
        resp = client.post("/callbacks/dag-event", json=event)
        assert resp.status_code == 202
>       assert hub.weights == [("v2", 0.5)]
E       AssertionError: assert [('v2', 0.5), ('v2', 0.5)] == [('v2', 0.5)]
E         
E         Left contains one more item: ('v2', 0.5)
E         Use -v to get more diff

tests/gateway/test_callbacks.py:61: AssertionError
____________________ test_dag_event_sentinel_weight_invalid ____________________

    def test_dag_event_sentinel_weight_invalid():
        class DummyHub:
            def __init__(self):
                self.weights = []
    
            async def send_sentinel_weight(self, sid: str, weight: float) -> None:
                self.weights.append((sid, weight))
    
        metrics.reset_metrics()
        hub = DummyHub()
        app = create_app(ws_hub=hub)
        client = TestClient(app)
        event = format_event(
            "qmtl.dagmanager",
            "sentinel_weight",
            {"sentinel_id": "v3", "weight": 1.2},
        )
        resp = client.post("/callbacks/dag-event", json=event)
        assert resp.status_code == 202
>       assert hub.weights == []
E       AssertionError: assert [('v3', 1.2)] == []
E         
E         Left contains one more item: ('v3', 1.2)
E         Use -v to get more diff

tests/gateway/test_callbacks.py:86: AssertionError
------------------------------ Captured log call -------------------------------
WARNING  qmtl.gateway.api:api.py:259 Ignoring out-of-range sentinel weight 1.2 for v3
_____________________ test_http_sentinel_traffic_overwrite _____________________

    @pytest.mark.asyncio
    async def test_http_sentinel_traffic_overwrite():
        metrics.reset_metrics()
        weights = {"v1": 0.1}
        metrics.reset_metrics()
        app = create_app(weights=weights)
        transport = httpx.ASGITransport(app)
        async with httpx.AsyncClient(transport=transport, base_url="http://test") as client:
            await client.post(
                "/callbacks/sentinel-traffic",
                json={"version": "v1", "weight": 0.4},
            )
        assert weights["v1"] == 0.4
        assert metrics.dagmgr_active_version_weight._vals["v1"] == 0.4
>       assert metrics.active_version_weight._vals["v1"] == 0.4
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: module 'qmtl.dagmanager.metrics' has no attribute 'active_version_weight'

tests/test_grpc_server.py:290: AttributeError
=========================== short test summary info ============================
FAILED tests/gateway/test_callbacks.py::test_dag_event_sentinel_weight - Asse...
FAILED tests/gateway/test_callbacks.py::test_dag_event_sentinel_weight_metric
FAILED tests/gateway/test_callbacks.py::test_dag_event_sentinel_weight_invalid
FAILED tests/test_grpc_server.py::test_http_sentinel_traffic_overwrite - Attr...
4 failed, 97 passed, 13 warnings in 14.82s
