gateway:
  host: 0.0.0.0
  port: 8000
  # Omit redis_dsn to fall back to an in-memory Redis substitute
  redis_dsn: redis://localhost:6379
  # Lightweight local store for quick testing
  database_backend: sqlite
  database_dsn: ./qmtl.db
  # Insert a VersionSentinel node for each DAG; set to false to disable
  insert_sentinel: true
  # ControlBus (optional): list brokers and topics to subscribe for control events
  # controlbus_brokers: ["localhost:9092"]
  # controlbus_topics: ["activation", "policy", "queue"]
  # controlbus_group: gateway
  # WorldService proxy (optional): enable proxying /worlds/* via Gateway
  # worldservice_url: http://localhost:8080
  # worldservice_timeout: 0.3
  # worldservice_retries: 2
  # worldservice_breaker_max_failures: 3
  # enable_worldservice_proxy: true
  # enforce_live_guard: true
  # To use Postgres in a production cluster uncomment below
  # database_backend: postgres
  # database_dsn: postgresql://user:pass@db/qmtl

dagmanager:
  memory_repo_path: memrepo.gpickle
  # Example cluster configuration using Neo4j and Kafka
  # neo4j_dsn: bolt://localhost:7687
  # neo4j_user: neo4j
  # neo4j_password: neo4j
  # kafka_dsn: localhost:9092
  grpc_host: 0.0.0.0
  grpc_port: 50051
  http_host: 0.0.0.0
  http_port: 8000
