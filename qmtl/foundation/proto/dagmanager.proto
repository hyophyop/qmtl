syntax = "proto3";
package qmtl.services.dagmanager;

message DiffRequest {
  string strategy_id = 1;
  string dag_json = 2;
  string world_id = 3;
  string execution_domain = 4;
  string as_of = 5;
  string partition = 6;
  string dataset_fingerprint = 7;
}

message BufferInstruction {
  string node_id = 1;
  string node_type = 2;
  string code_hash = 3;
  string schema_hash = 4;
  int64 interval = 5;
  int32 period = 6;
  repeated string tags = 7;
  int32 lag = 8;
  string schema_id = 9;
}

message DiffChunk {
  map<string,string> queue_map = 1;
  string sentinel_id = 2;
  repeated BufferInstruction buffer_nodes = 3;
  string version = 4;
}

message ChunkAck {
  string sentinel_id = 1;
  uint32 chunk_id = 2;
}

service DiffService {
  rpc Diff(DiffRequest) returns (stream DiffChunk);
  rpc AckChunk(ChunkAck) returns (ChunkAck);
}

message TagQueryRequest {
  repeated string tags = 1;
  int64 interval = 2;
  string match_mode = 3;
}

message QueueDescriptor {
  string queue = 1;
  bool global = 2;
}

message TagQueryReply {
  repeated QueueDescriptor queues = 1;
}

service TagQuery {
  rpc GetQueues(TagQueryRequest) returns (TagQueryReply);
}

message CleanupRequest {
  string strategy_id = 1;
}

message CleanupResponse {}

message QueueStatsRequest {
  string filter = 1;
}

message QueueStats {
  map<string,int64> sizes = 1;
}

service AdminService {
  rpc Cleanup(CleanupRequest) returns (CleanupResponse);
  rpc GetQueueStats(QueueStatsRequest) returns (QueueStats);
  rpc RedoDiff(RedoDiffRequest) returns (DiffResult);
}

message RedoDiffRequest {
  string sentinel_id = 1;
  string dag_json = 2;
}

message DiffResult {
  map<string,string> queue_map = 1;
  string sentinel_id = 2;
  string version = 3;
}

message StatusRequest {}
message StatusReply {
  string neo4j = 1;
  string state = 2;
}

service HealthCheck {
  rpc Status(StatusRequest) returns (StatusReply);
}
