I parsed issue 762 and inspected the current DAG Manager schema/CLI files. I’m blocked from applying changes or running tests due to a read‑only sandbox.

**Issue Summary**
- ID: 762
- Title: DAG Manager — Add safe Neo4j schema rollback (CLI + helpers)
- Scope: add rollback helpers in `qmtl/dagmanager/neo4j_init.py`, a `neo4j-rollback` CLI subcommand, a unit test that inspects generated drop statements, and a doc blurb referencing rollback usage.

**Proposed Changes**

- qmtl/dagmanager/neo4j_init.py
  - Add functions:
    - get_drop_queries(): returns Cypher to drop only objects created by init using named drops:
      - "DROP CONSTRAINT compute_pk IF EXISTS"
      - "DROP INDEX kafka_topic IF EXISTS"
      - "DROP INDEX compute_tags IF EXISTS"
      - "DROP INDEX queue_interval IF EXISTS"
      - "DROP INDEX compute_buffering_since IF EXISTS"
    - rollback_schema(driver): executes each statement from get_drop_queries() in a session.
    - rollback(uri, user, password): connects via existing connect(), calls rollback_schema(), closes the driver.
  - Rationale: Mirrors existing idempotent schema init with safe IF EXISTS drops; no external side effects beyond running Cypher.

- qmtl/dagmanager/cli.py
  - Add subcommand `neo4j-rollback` with flags `--uri/--user/--password` (defaults consistent with existing commands).
  - Implement handler:
    - `_cmd_neo4j_rollback(args)` that calls `neo4j_init.rollback(args.uri, args.user, args.password)`.
  - Wire into parser and dispatch chain; update import to include `rollback`.

- tests/test_neo4j_schema_rollback.py
  - New unit test verifying generation only (no Neo4j dependency):
    - Imports `get_drop_queries()` and asserts it includes all five expected statements listed above.
    - Optional: assert all statements start with "DROP " and contain " IF EXISTS".

- docs/architecture/dag-manager.md
  - Add a short note in “Admin CLI Snippets” (or a tiny subsection) showing rollback usage:
    - Example:
      - `qmtl dagmanager neo4j-rollback --uri bolt://localhost:7687 --user neo4j --password neo4j`
      - Note: Drops only named objects created by init using `IF EXISTS` for idempotency.
  - Keep changes minimal to avoid touching other sections.

**Validation Plan**
- Preflight tests:
  - PYTHONFAULTHANDLER=1 uv run --with pytest-timeout -m pytest -q -k 'not slow' --timeout=60 --timeout-method=thread --maxfail=1
- Full tests:
  - uv run -m pytest -W error -n auto
- Docs:
  - uv run mkdocs build

I could not apply patches or run any commands that write due to the read‑only sandbox and non‑interactive policy. The diffs are small and isolated; once write access is available, I can apply them and run the validations above.

**Changed Files (planned)**
- qmtl/dagmanager/neo4j_init.py: add rollback helpers and drop query generator.
- qmtl/dagmanager/cli.py: add `neo4j-rollback` CLI subcommand and handler.
- tests/test_neo4j_schema_rollback.py: new unit test verifying drop statements.
- docs/architecture/dag-manager.md: add brief rollback usage note.

Suggested commit message
Refs #762: feat(dag-manager): add safe Neo4j schema rollback (CLI + helpers) and unit test; document rollback usage

Result status: Blocked