[project]
name = "qmtl"
version = "0.1.0"
requires-python = ">=3.11"
dependencies = [
    "prometheus-client",
    "boto3",
    "xarray",
    "networkx",
    "numpy",
    "httpx",
    "fastapi",
    "uvicorn",
    "redis",
    "asyncpg",
    "aiosqlite",
    "websockets",
    "grpcio>=1.75.0",
    "grpcio",
    "PyYAML",
    "psutil",
    "opentelemetry-sdk",
    "opentelemetry-exporter-otlp-proto-http",
    "opentelemetry-instrumentation-fastapi",
    "opentelemetry-instrumentation-httpx",
    "opentelemetry-instrumentation-grpc",
    "cachetools",
    "blake3",
    "pytest-asyncio>=0.23",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "pytest-xdist",
    "hypothesis>=6.100",
    "jsonschema>=4.0.0",
    "fakeredis",
    "grpcio-tools>=1.74.0",
    "pyarrow",
    "mkdocs-material",
    "mkdocs-macros-plugin",
    "mkdocs-breadcrumbs-plugin",
    "mkdocs-static-i18n",
    "websocket-client",
]

ray = ["ray"]
io = ["pandas"]
ccxt = ["ccxt"]
questdb = ["asyncpg"]

[tool.uv]
default-groups = ["dev"]

[dependency-groups]
dev = [
    "pytest",
    "pytest-asyncio",
    "pytest-xdist",
    "hypothesis>=6.100",
    "jsonschema>=4.0.0",
    "fakeredis",
    "grpcio-tools>=1.74.0",
    "pyarrow",
    "mkdocs-material",
    "mkdocs-macros-plugin",
    "mkdocs-breadcrumbs-plugin",
    "mkdocs-static-i18n",
    "websocket-client",
]

[project.scripts]
qmtl = "qmtl.interfaces.cli:main"
qmtl-commitlog-consumer = "qmtl.services.gateway.commit_log_cli:main"

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["qmtl*"]

[tool.setuptools.package-data]
"qmtl.examples" = [
  "*.py",
  "*.yml",
  "*.yaml",
  "templates/*.yml",
  "gitignore",
  "README.md",
  "data/*.csv",
  "*.csv",
  "seamless/*.yaml",
  "seamless/*.yml",
  "notebooks/*.ipynb",
]
"qmtl.foundation.schema" = [
  "schemas/*.json",
]
